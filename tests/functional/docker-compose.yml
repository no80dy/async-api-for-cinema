# файл-конфигурация для запуска всей инфраструктуры с тестами.
# TODO адаптировать этот компоуз под тесты: ссылки на докерфайлы, вольюмы/маунт-юинт файлы
version: '3'
services:
  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile-etl
    env_file:
      - ./etl/etl.env
    depends_on:
      - db
      - elastic
      - fastapi
    volumes:
      - ./etl:/app/etl

  redis:
    image: docker.io/bitnami/redis:7.2.1
    environment:
      - ALLOW_EMPTY_PASSWORD=yes  # для прода данный параметр удалить
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

  db:
    build:
      context: .
      dockerfile: Dockerfile-db
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

  elastic:
    image: elasticsearch:8.6.2
    environment:
      - "ES_JAVA_OPTS=-Xms200m -Xmx200m"
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"  # для прода данный параметр удалить
    ports:
      - "9200:9200"  # необходимо для ETL в рамках разработки

  fastapi:
    build: ./src
    image: fastapi-image
    env_file:
      - ./fastapi.env
    depends_on:
      - elastic
      - redis

  nginx:
    image: nginx:1.19.2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro

    depends_on:
      - fastapi
    ports:
      - "80:80"

  tests:
    image: fastapi-image
    # depends_on определяет, запустился ли основной процесс внутри Docker-контейнера. Однако, даже если процесс
    # запустился, сервис может ещё производить стартовую настройку, поэтому тесты могут начать посылать запросы раньше,
    # чем всё будет готово.
    entrypoint: >
      sh -c "pip install -r /tests/functional/requirements.txt
      && python3 /tests/functional/utils/wait_for_es.py
      && python3 /tests/functional/utils/wait_for_redis.py
      && pytest /tests/functional/src"

volumes:
  pgdata:






